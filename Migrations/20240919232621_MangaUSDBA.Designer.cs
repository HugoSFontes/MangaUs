// <auto-generated />
using System;
using MangaUs.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MangaUs.Migrations
{
    [DbContext(typeof(MangaDbContext))]
    [Migration("20240919232621_MangaUSDBA")]
    partial class MangaUSDBA
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MangaUs.Models.Capitulo", b =>
                {
                    b.Property<int>("CapituloId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CapituloId"));

                    b.Property<DateTime>("DtAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("MangaId")
                        .HasColumnType("int");

                    b.Property<int>("NumeroCapitulo")
                        .HasColumnType("int");

                    b.HasKey("CapituloId");

                    b.HasIndex("MangaId");

                    b.ToTable("Capitulos");
                });

            modelBuilder.Entity("MangaUs.Models.Manga", b =>
                {
                    b.Property<int>("MangaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MangaId"));

                    b.Property<string>("Autor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("CapaManga")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MangaId");

                    b.ToTable("Mangas");
                });

            modelBuilder.Entity("MangaUs.Models.Pagina", b =>
                {
                    b.Property<int>("PaginaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaginaId"));

                    b.Property<int>("CapituloId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Imagem")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("NumeroPagina")
                        .HasColumnType("int");

                    b.HasKey("PaginaId");

                    b.HasIndex("CapituloId");

                    b.ToTable("Paginas");
                });

            modelBuilder.Entity("MangaUs.Models.Capitulo", b =>
                {
                    b.HasOne("MangaUs.Models.Manga", "Manga")
                        .WithMany("Capitulos")
                        .HasForeignKey("MangaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manga");
                });

            modelBuilder.Entity("MangaUs.Models.Pagina", b =>
                {
                    b.HasOne("MangaUs.Models.Capitulo", "Capitulo")
                        .WithMany("Paginas")
                        .HasForeignKey("CapituloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Capitulo");
                });

            modelBuilder.Entity("MangaUs.Models.Capitulo", b =>
                {
                    b.Navigation("Paginas");
                });

            modelBuilder.Entity("MangaUs.Models.Manga", b =>
                {
                    b.Navigation("Capitulos");
                });
#pragma warning restore 612, 618
        }
    }
}
